<script src="js/chat.js"></script>
<div id='layout' >
    <div class='col-md-2 full-height'>
        <div class='full-height full-width'>
            <img class="img-circle pure-image own-avatar" alt="Tilo Mitra&#x27;s avatar" height="50" width="50" src='<%-user.avatarUrl %>'>
            <div id='user-title' class='title'>
                联系人
            </div>
            <div id='user-list' class='scrollable' >
            </div>
        </div>
    </div>   

    <div class='col-md-5 full-height'>
        <div class='full-height full-width'>
            <div id='to-peer-id' class='title'>

            </div>
            <div id='peer-box' class='scrollable' >
            </div>

            <div class='footer form'>
                <div class="pure-form" style='position:relative;'>
                    <input id="msg" class='chat-reply'></input>
                    <span class='chat-reply-btn'>
                        <button class='btn btn-secondary'  id="sendbtn">回复</button>
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class='col-md-5 full-height'>
        <div class='full-height full-width'>
            <div class='title'>
                订单信息
            </div>
            <div id='order' class='scrollable' >
            </div>
        </div>
    </div>
</div>

<div class="clearfix"></div>
<div id="test" class='center'>
    <div class="form-inline">
        <div class="form-group">
            <label for="">
                新建聊天
            </label>
            <input type="text " id="watchingPeer" class="form-control" >
        </div>
        <span id="connect-status" class="text-primary">
            not connected
        </span>
        <div class="btn-group">
            <button id="addwatch" class="btn btn-default">
                watch
            </button>
        </div>
    </div>
</div>

</div>
<!-- Template -->

<div class="hide">
    <div id="user-tpl">
      <div id='user-@peerId@' class='user-item pure-g' data-peer-id='@peerId@'>
        <div class="item">
          <a href="#"  id="peer-@peerId@" onclick="addWatch('@peerId@');setSendTo('@peerId@');switchChatTo('@peerId@');">
              <img class="img-circle avatar"  height="40" width="40" src='img/user1.png'>
              <span class='name'>@peerId@</span>
          </a>
          <a class='removewatch' href='#' data-peer-id='@peerId@' onclick='removeWatch(this)'><i class='fa fa-remove'></i></a>
      </div>
  </div>
</div>

<div id="nav-tpl">
    <a href="#@peerId@" id="slide-@peerId@">@peerId@</a>    
</div>

<div id="msg-tpl">
    <ul id='@peerId@'>                      
    </ul>   
</div>


<div id="text-tpl">
    <li class='msg msg-text {=klass}' data-peer-id='{=peerId}'>
        <img src='img/user1.png' class='img-responsive avatar'></img>
        <div class='msg-content'>
            <span class='msg-body'>
                <span>{=content}</span>
            </span>
            <div class='arrow' > </div>
        </div>
    </li>
</div>



<div id="image-tpl">
    <li class='msg msg-image {=klass}' data-peer-id='{=peerId}'>
        <img src='img/user1.png' class='img-responsive avatar'></img>
        <img class='img-responsive image' src="{=content}" alt="{=peerId}">
    </li>
</div>

<div id="voice-tpl">
    <li>
        {=peerId}说: <video controls="" autoplay="" name="media">
        <source src="{=content}" type="audio/mpeg"></video>   
        </li>
    </div>

    <div id='car-info-tpl'>
        <div class="pure-control-group">
            <p>{=make} {=series} {=model}</p>
            <p>{=volume}升 {=year}年款</p>
        </div>
    </div>

    <div id="car-option-tpl">
        <option value='{=objectId}'>{=make} {=series} {=model} {=volume}升</option>
    </div>

    <div id="car-tpl">
        <div class="pure-form pure-form-aligned zform">
            <!-- cars -->
            <b class='banner pure-u-1'>车辆信息</b>
            <div class="pure-control-group">
                <select id="car-ids">
                    <option value=''>新增车辆…</option>
                </select> 
            </div>
            <div id='car-info'>
            </div>
        </div>
    </div>

    <div id="car-form-tpl">
        <form id='car-form'>
            <div class="pure-control-group">
                <label>厂商</label>
                <input name='make' type="text">
            </div>
            <div class="pure-control-group">
                <label>车系</label>
                <input name='series' type="text">
            </div>
            <div class="pure-control-group">
                <label>型号</label>
                <input name='model' type="text">
            </div>
            <div class="pure-control-group">
                <label>排量</label>
                <input name='volume' type="text">
            </div>

            <div class="pure-control-group">
                <label>牌照</label>
                <input name='plate' type="text">
            </div>
            <div class="pure-control-group">
                <label>年份</label>
                <input name='year' type="number" min='1800'>
            </div>
        </form>
        <button id='save-car' class='btn btn-save'> 保存</button>
        <button id="cancel-car" class='btn btn-default btn-cancel'>取消</button>
    </div>

    <div id="addr-tpl">
        <div class="pure-form pure-form-aligned zform">
            <div class='banner pure-u-1'>地址信息</div>
            <div class='pure-control-group'>
                <select id='addr-ids'>
                    <option value=''>新增地址...</option>
                </select>
            </div>
            <div id='addr-info'>
            </div>
        </div>
    </div>

    <div id='addr-info-tpl'>
        <div class="pure-control-group">
            <p>{=detail}</p>
            <p>{=name} 手机号：{=mobile}</p>
        </div>
    </div>

    <div id="addr-option-tpl">
        <option value='{=objectId}'>{=name} {=detail}</option>
    </div>

    <div id="addr-form-tpl">
        <form id='addr-form' class='yfade'>
            <div class="pure-control-group">
                <label>地址</label>
                <input name='detail' type="text">
            </div>
            <div class="pure-control-group">
                <label>联系人</label>
                <input name='name' type="text">
            </div>
            <div class="pure-control-group">
                <label>手机</label>
                <input name='mobile' type="text">
            </div>
            <div class="pure-control-group">
                <label>固定电话（选填）</label>
                <input name='tel' type="text">
            </div>
        </form>
        <button class='btn btn-save'> 保存</button>
        <button class='btn btn-default btn-cancel'>取消</button>
    </div>

     <div id="item-tpl">
        <div class="pure-form pure-form-aligned zform">
            <div class='banner pure-u-1'>
            服务内容
            <div class='actions'>
                <button class='btn btn-add pull-right'> 新增</button>
            </div>
        </div>
            <form id='item-form'>
            <div id='item-info'>
            </div>
            </form>
        </div>
    </div>

    <div id="item-info-tpl">
        <div class='pure-control-group' id='item-{=id}'>
            <label>名称</label>
            <input type='text' name='name' value='{=name}'>
            <label>金额</label>
            <input type='number' name='price' value='{=price}'>
            <button class='btn btn-remove' data-item-id='item-{=id}'>x</button>
        </div>
    </div>

    <div id="other-tpl">
        <div class="pure-form pure-form-aligned zform">
            <div class='banner pure-u-1'>其他信息</div>
            <div class="pure-control-group">
                <label>服务时间</label>
                <input type='text' name='serviceTime' value='{=name}' class='datetimepicker'>
            </div>
            <div class="pure-control-group">
                <label>销售员</label>
                <select id='salesman-ids'>
                <option></option>
                </select>
            </div>
            <div class="pure-control-group">
                <label>服务商</label>
                <select id='store-ids'>
                <option></option>
                </select>
            </div>
            <button class='btn btn-save'>发给客户确认</button>
        </div>
    </div>
    <!-- end -->
</div>
</div>
</div>
<script>
    var customer = null;
    AV.$ = jQuery;
    AV.initialize( "eenezb2s4tnlbytmv8rt3ndrv4qiux13jg7s90n7ff72kvoa",
        "flo4ra0v81t51v0ug33pzwvm4xsclmgqo23fqht4iendgoio");
    var peerId = '<%-user.username%>';
    var myPeerId = '<%-user.username%>';
    var myAvatarUrl = '<%-user.avatarUrl%>';
    localStorage[myPeerId+'-avatar'] = myAvatarUrl;
    var watching = [];
   var toPeerId;


        // var watchingPeer = $('#watchingPeer').val().split(',');
        var chat;
        // ---------------- 基本初始化 打开关闭 ----------------
        $(function() {


            if($('#watchingPeer').val()!=""){
                watching = $('#watchingPeer').val().split(',');
            }
            chat = new AVChatClient({
                appId: appid,
                peerId: peerId
            });
            chat.on('close', function() {
                alert('connection closed')
                $('#connect-status').text('not connected');
                $('.online').removeClass('online').addClass('offline');
            });
            // --------------- chat 相关监听 ---------------
            chat.on('message', function(data) {
                addWatch(data.fromPeerId);
                if ($('to-peer-id').text() == ''){
                    $('to-peer-id').text(data.fromPeerId);
                }
                console.log(JSON.parse(data.msg));
                receive_msg = JSON.parse(data.msg);
                switch(receive_msg.InfoType) {
                    case "IMAGE":
                    // str = $('#image-tpl').html().replace(/@peerId@/g, data.fromPeerId);
                    // str2 = str.replace(/@content@/g, receive_msg.Content);
                    str2 = _.template($('#image-tpl').html())({
                        peerId: data.fromPeerId,
                        content: receive_msg.Content,
                        klass:'to-me'
                    });
                    
                    break;

                    case "VOICE":
                    // str = $('#voice-tpl').addClass('other').html().replace(/@peerId@/g, data.fromPeerId);
                    // str2 = str.replace(/@content@/g, receive_msg.Content);
                    
                    str2 = _.template($('#voice-tpl').html())({
                        peerId: data.fromPeerId,
                        content: receive_msg.Content,
                        klass:'to-me'
                    });
                    break;

                    case "TEXT":
                    // str = $('#text-tpl').addClass('other').html().replace(/@peerId@/g, data.fromPeerId);
                    // str2 = str.replace(/@content@/g, receive_msg.Content);

                    str2 = _.template($('#text-tpl').html())({
                        peerId: data.fromPeerId,
                        content: receive_msg.Content,
                        klass:'to-me'
                    });                   
                    break;
                }             
                $('#'+data.fromPeerId).append(str2);
                switchChatTo($('#to-peer-id').text());
            });
chat.on('online', function(peers) {
    for (var i = 0; i < peers.length; i++) {
        $('#peer-' + peers[i]).removeClass('offline');
        $('#peer-' + peers[i]).addClass('online');
    }
});
chat.on('offline', function(peers) {
    for (var i = 0; i < peers.length; i++) {
        $('#peer-' + peers[i]).removeClass('online');
        $('#peer-' + peers[i]).addClass('offline');
    }
});
openSocket();
});
        // --------------- 基础 ---------------
        function openSocket(){
            $('#user-list').empty();
            addWatchingPeer($('#watchingPeer').val().split(','));
            chat.open().then(function() {
                $('#connect-status').text('connected');
                if(localStorage.getItem(myPeerId) === null){
                   localStorage[myPeerId] = JSON.stringify(watching);
               }else{
                console.log('start');
                console.log(JSON.parse(localStorage[myPeerId]));
                _.each(JSON.parse(localStorage[myPeerId]), function(v) {
                    console.log(v);
                    addWatch(v);
              });
                if (watching.length> 0){
                    console.log('xxlkajskldfjaskljflksjdf!');
                    console.log(watching[0]);
                    setSendTo(watching[0]);
                    switchChatTo(watching[0]);
                }
            }
            }, function(err) {
                alert('open failure');
                console.log(err)
            });
        }
        function closeSocket() {
            chat.close().then(function() {
                $('#connect-status').text('not connected');
                $('.online').removeClass('online').addClass('offline');
            });
        }
        //---------------- 1 v 1 聊天相关 ----------------
        function addWatch(peerId){
            if (!_.contains(watching, peerId)){
                addWatchingPeer(peerId.split(','));
                console.log(peerId);
                list  = JSON.parse(localStorage[myPeerId]);
                nlist=list.concat(peerId.split(','));
                nlist = _.uniq(nlist);
                console.log('nlist');
                console.log(nlist);
                watching.push(peerId);
                localStorage[myPeerId] = JSON.stringify(nlist);

                // console.log(localStorage[myPeerId]);

                chat.watch(peerId.split(',')).then(function() {
                }, function() {
                    alert('watch failure')
                });
            }
        }
        function removeWatch(target){
            var opeerId = $(target).data('peer-id');
            peerId = [opeerId];
            list  = JSON.parse(localStorage[myPeerId]);
            nlist = _.without(list,opeerId);
            localStorage[myPeerId] = JSON.stringify(nlist);
            removeWatchingPeer(peerId);
            chat.unwatch(peerId);
            watching.remove(peerId);
            $('#user-'+peerId).remove();
            $('#'+peerId).remove();
            $('#to-peer-id').empty();
            if ($('#user-list .user-item-selected').length <= 0){
                var peerId = $('#user-list .user-item:first').data('peer-id');
                setSendTo(peerId);
            }
        }
        $('#addwatch').click(       
            function() {
                addWatch($('#watchingPeer').val());
            });

        function switchChatTo(peerId){
            if (peerId && peerId != ''){
                $('#peer-box > ul').each(function(){
                    $(this).addClass('hide');
                })
                $('#'+peerId).removeClass('hide');
            }
        }
        function addWatchingPeer(peers) {
            for (var i = 0; i < peers.length; i++) {
                if (!peers[i]) {
                    return;
                }
                var str = $('#user-tpl').html().replace(/@peerId@/g, peers[i]);
                var str3 = $('#msg-tpl').html().replace(/@peerId@/g, peers[i]);

                // $('#user-list').append(str);
                AV.Cloud.run("findUserByName", {username: peers[i]}, {
                    success: function(data){
                        $('#user-list').append(str);
                            if(typeof data != 'undefined'){
                            $('#user-' + data.username +'> div > a > img').attr("src",data.avatarUrl); 
                            localStorage[data.username+'-avatar'] = data.avatarUrl;
                            }

                    },
                    error: function(err){
                        console.log('oops, there is something wrong.');
                    }
                });
                $('#peer-box').append(str3);
                if ($('#user-list .user-item').length <= 1) {
                    setSendTo(peers[i])
                }
                
            }
        }
        function removeWatchingPeer(peers) {
            peers = [].concat(peers);
            for (var i = 0; i < peers.length; i++) {
                if (!peers[i]) {
                    return;
                }
                $('#peer-' + peers[i]).parent().parent().remove();
                $('#slide-' + peers[i]).remove();
                $('#'+peers[i]).remove();
            }
        }
        $('#sendbtn').click(function() {
            origin_msg = $('#msg').val();
            send_msg = {
                "Content": origin_msg,
                "InfoType":"TEXT"
            }

            console.log(JSON.stringify(send_msg));
            chat.send(  JSON.stringify(send_msg), toPeerId, false).then(function() {
                            // 这里是发送的消息append
                            str = _.template($('#text-tpl').html())({
                                peerId:peerId,
                                content:origin_msg,
                                klass:'from-me'
                            });
                            var elem = $(str);
                            $('img', elem).attr('src', localStorage[myPeerId+'-avatar']);
                            $('#'+toPeerId).append(elem);
                            $('#msg').val('');

                        }, function(err) {
                            console.log(err)
                            alert("send failure!!!")
                        });
        });
    </script>
    
